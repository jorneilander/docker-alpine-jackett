---
name: Publish Jackett

on:
  repository_dispatch:
  workflow_dispatch:
  schedule:
    - cron: "0 4 * * *"

jobs:
  lint_repository:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Run Hadolint
        uses: brpaz/hadolint-action@v1.1.0
        continue-on-error: true

  build_and_publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and publish
        id: vars
        run: |
          set -e
          ALPINE_VERSION=3.12
          IMAGE_NAME=failfr8er/jackett
          JACKETT_RAW=$(curl -H "Accept: application/vnd.github.v3+json" -s https://api.github.com/repos/jackett/jackett/releases/latest)
          JACKETT_VERSION=$(echo "${JACKETT_RAW}" | jq -r '.tag_name')
          JACKETT_ASSET=$(echo "${JACKETT_RAW}" | jq -r '.assets[] | select(.name == "Jackett.Binaries.Mono.tar.gz").browser_download_url')

          wget "${JACKETT_ASSET}"

          docker buildx build \
            --file Dockerfile \
            --cache-from=type=local,src=/tmp/.buildx \
            --cache-to=type=local,dest=/tmp/.buildx \
            --tag ${IMAGE_NAME}:${JACKETT_VERSION} \
            --tag ${IMAGE_NAME}:latest \
            --push \
            --build-arg ALPINE_VERSION=${ALPINE_VERSION} \
            --build-arg JACKETT_VERSION=${JACKETT_VERSION} \
            --platform=linux/amd64 \
            .

      - name: Container image scan
        uses: Azure/container-scan@v0
        continue-on-error: true
        with:
          image-name: "failfr8er/jackett:${{ steps.vars.outputs.JACKETT_VERSION }}"